name: CI
on:
  pull_request:
    branches: [ master, main, develop, feature/** ]
  push:
    branches: [ master, main, develop, feature/** ]
  workflow_dispatch:

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: backend } }
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install deps
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov ruff black pip-audit httpx
      - name: Lint (ruff)
        run: ruff check .
      - name: Format check (black)
        run: black --check .
      - name: Security (pip-audit)
        run: pip-audit -r requirements.txt || true
      - name: Test (pytest)
        run: PYTHONPATH=. pytest -v --maxfail=1 --disable-warnings

  frontend:
    needs: backend
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: frontend } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install deps
        run: npm ci
      - name: Lint
        run: npm run lint --if-present
      - name: Security audit
        run: npm audit --audit-level=high || true
      - name: Test
        run: npm test -- --run --reporter=verbose
      - name: Build
        run: npm run build
